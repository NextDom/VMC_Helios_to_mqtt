[
   {
      "id":"b0788add.6def58",
      "type":"modbus-flex-write",
      "z":"2bdc8678.a14262",
      "name":"write data to VMC",
      "showStatusActivities":true,
      "showErrors":true,
      "server":"84089ad8.f112d",
      "x":1130,
      "y":380,
      "wires":[
         [

         ],
         [
            "da19d394.fc445",
            "a2a9fe2c.26b1d8",
            "22579803.54aa5"
         ]
      ]
   },
   {
      "id":"da19d394.fc445",
      "type":"modbus-response",
      "z":"2bdc8678.a14262",
      "name":"write response",
      "registerShowMax":20,
      "x":1340,
      "y":440,
      "wires":[

      ]
   },
   {
      "id":"78d3aa9c.682f4c",
      "type":"catch",
      "z":"2bdc8678.a14262",
      "name":"",
      "scope":null,
      "uncaught":false,
      "x":100,
      "y":20,
      "wires":[
         [
            "cc3c2e94.2e2dd8"
         ]
      ]
   },
   {
      "id":"cc3c2e94.2e2dd8",
      "type":"debug",
      "z":"2bdc8678.a14262",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"payload",
      "targetType":"msg",
      "x":270,
      "y":20,
      "wires":[

      ]
   },
   {
      "id":"1bc292a9.c9c2fd",
      "type":"modbus-flex-getter",
      "z":"2bdc8678.a14262",
      "name":"read data from VMC",
      "showStatusActivities":true,
      "showErrors":true,
      "logIOActivities":false,
      "server":"84089ad8.f112d",
      "useIOFile":false,
      "ioFile":"",
      "useIOForPayload":false,
      "x":740,
      "y":560,
      "wires":[
         [
            "1bf6a3a1.cc150c"
         ],
         [
            "86c71092.11b2f",
            "dbc7fe38.90d628",
            "f71b8a0f.134c98"
         ]
      ]
   },
   {
      "id":"86c71092.11b2f",
      "type":"modbus-response",
      "z":"2bdc8678.a14262",
      "name":"read response",
      "registerShowMax":20,
      "x":960,
      "y":620,
      "wires":[

      ]
   },
   {
      "id":"f71b8a0f.134c98",
      "type":"debug",
      "z":"2bdc8678.a14262",
      "name":"read function",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":950,
      "y":680,
      "wires":[

      ]
   },
   {
      "id":"157afd4b.af488b",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"FC16 - Unit-ID 180 - 1-x register",
      "func":"msg.payload = { \n    value: msg.payload,\n    //value: [30256,12337,12337,15664,0],\n    fc: 16,\n    unitid: 180,\n    address: 1,\n    quantity: msg.registers\n};\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1040,
      "y":200,
      "wires":[
         [
            "733a156.b55aaec"
         ]
      ]
   },
   {
      "id":"469387d2.9fc3e",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"FC3 - Unit-ID 180 - 1-x register",
      "func":"msg.payload = { \n    value: msg.payload,\n    fc: 3,\n//    unitid: 180,\n    address: 1,\n    quantity: msg.registers \n};\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":470,
      "y":560,
      "wires":[
         [
            "1bc292a9.c9c2fd"
         ]
      ]
   },
   {
      "id":"d5af13df.bc599",
      "type":"delay",
      "z":"2bdc8678.a14262",
      "name":"",
      "pauseType":"delay",
      "timeout":"2",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"1",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":false,
      "x":240,
      "y":560,
      "wires":[
         [
            "469387d2.9fc3e"
         ]
      ]
   },
   {
      "id":"a2a9fe2c.26b1d8",
      "type":"debug",
      "z":"2bdc8678.a14262",
      "name":"write function",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1340,
      "y":380,
      "wires":[

      ]
   },
   {
      "id":"dbc7fe38.90d628",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"create mqtt message",
      "func":"var input =\"\";\nvar result = [];\n\ninput = Buffer.from(msg.payload['buffer']).toString(\"ascii\");\nresult = input.split(\"=\");\nif (!result[0] || !result[1]) {\n    msg.payload = \"error\";\n    return msg;\n}\nif (msg.type != \"number\") {\n    msg.payload = result[1];\n} else {\n    msg.payload = parseFloat(result[1]);\n}\nmsg.topic = \"vmc/\" + msg.publishTopic;\nreturn msg;\n\n\n",
      "outputs":1,
      "noerr":0,
      "x":560,
      "y":500,
      "wires":[
         [
            "7f4e265f.b3f8d"
         ]
      ]
   },
   {
      "id":"8c8d3631.38c7f",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"convert data format (string to array word)",
      "func":"var payload = msg.payload;\nvar input = \"\";\nvar result = [];\nvar regexVariable = /[v]\\d\\d\\d\\d\\d/;\nvar regexTopic = /\\W/;\nvar variable = \"\";\nvar registers = 0;\nvar value = \"\";\nvar type = \"\";\nvar publishTopic = \"\";\n\nif (payload.hasOwnProperty(\"variable\")) {\n    //Check variable name [vxxxxx] with x=[0-9]\n    if (regexVariable.test(payload.variable)) {\n        variable = payload.variable;\n    } else {\n        return;\n    }\n} else {\n    return;\n}\n\nif (payload.hasOwnProperty(\"registers\")) {\n    //Check number of registers [5-20]\n    if (payload.registers >= 5 && payload.registers <= 20) {\n        registers = payload.registers;\n    } else {\n        return;\n    }\n} else {\n    return;\n}\n\nif (payload.hasOwnProperty(\"value\")) {\n    if (typeof payload.value === \"string\") {\n        value = payload.value;\n    } else {\n        value = payload.value.toString();\n    }\n    if (value.length >= 1 && value.length <= 31) {\n        input = variable + \"=\" + value; \n    } else {\n        input = variable; \n    }\n} else {\n    input = variable;\n}\n\nif (payload.hasOwnProperty(\"type\")) {\n    //Check type\n    if (payload.type == \"string\" || payload.type == \"number\") {\n        type = payload.type;\n    } else {\n        type = \"string\";\n    }\n} else {\n        type = \"string\";\n}\n\nif (payload.hasOwnProperty(\"topic\")) {\n    //Check mqtt topic\n    if (payload.topic.length > 0 && !regexTopic.test(payload.topic)) {\n        publishTopic = payload.topic;\n    } else {\n        publishTopic = variable;\n    }\n} else {\n    publishTopic = variable;\n}\n\n//Convert data (string to array word)\nfor (i = 0; i < input.length; i += 2) {\n  first  = input.charCodeAt(i);\n  second = \"0\".charCodeAt(0);\n  if ((i +1) < input.length) {\n    second = input.charCodeAt(i+1);\n  }\n  result.push(parseInt(\"0x\" + first.toString(16) + second.toString(16)))\n}\n\nwhile (result.length < registers) {\n    result.push(0x00); //Add null (0x00)\n}\n\n//Check data length\nif (result.length > registers) {\n    return;\n}\n\nmsg.payload = result;\nmsg.registers = registers;\nmsg.type = type;\nmsg.publishTopic = publishTopic;\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":700,
      "y":200,
      "wires":[
         [
            "157afd4b.af488b"
         ]
      ]
   },
   {
      "id":"abcb1f9a.c8b9",
      "type":"mqtt in",
      "z":"2bdc8678.a14262",
      "name":"",
      "topic":"vmc/commandes/#",
      "qos":"1",
      "datatype":"auto",
      "broker":"eca996cf.aecc38",
      "x":130,
      "y":200,
      "wires":[
         [
            "3fe7ba7f.73dab6",
            "cc3c2e94.2e2dd8"
         ]
      ]
   },
   {
      "id":"d82b0a8a.c7f97",
      "type":"mqtt out",
      "z":"2bdc8678.a14262",
      "name":"send",
      "topic":"",
      "qos":"1",
      "retain":"true",
      "broker":"eca996cf.aecc38",
      "x":890,
      "y":500,
      "wires":[

      ]
   },
   {
      "id":"3fe7ba7f.73dab6",
      "type":"json",
      "z":"2bdc8678.a14262",
      "name":"",
      "property":"payload",
      "action":"",
      "pretty":false,
      "x":310,
      "y":200,
      "wires":[
         [
            "1721090f.a20157"
         ]
      ]
   },
   {
      "id":"22579803.54aa5",
      "type":"actionflows",
      "z":"2bdc8678.a14262",
      "info":"Describe your action API here.",
      "untilproptype":"num",
      "proptype":"msg",
      "name":"read",
      "prop":"loop",
      "untilprop":0,
      "until":"gt",
      "loop":"none",
      "scope":"global",
      "perf":false,
      "seq":false,
      "x":1310,
      "y":500,
      "wires":[
         [
            "dad01ff4.424398"
         ]
      ]
   },
   {
      "id":"a35aea65.805928",
      "type":"actionflows_in",
      "z":"2bdc8678.a14262",
      "name":"read in",
      "priority":"50",
      "links":[

      ],
      "scope":"global",
      "x":90,
      "y":560,
      "wires":[
         [
            "d5af13df.bc599"
         ]
      ]
   },
   {
      "id":"83b12071.29c43",
      "type":"actionflows_out",
      "z":"2bdc8678.a14262",
      "name":"read out",
      "links":[

      ],
      "x":1100,
      "y":560,
      "wires":[

      ]
   },
   {
      "id":"b330709c.326dd",
      "type":"mqtt out",
      "z":"2bdc8678.a14262",
      "name":"",
      "topic":"vmc/commandes",
      "qos":"1",
      "retain":"true",
      "broker":"eca996cf.aecc38",
      "x":270,
      "y":380,
      "wires":[

      ]
   },
   {
      "id":"559b90c3.872a9",
      "type":"inject",
      "z":"2bdc8678.a14262",
      "name":"",
      "topic":"",
      "payload":"{\"a\":{\"variable\":\"v00101\",\"registers\":5,\"value\":\"0\",\"type\":\"number\",\"topic\":\"\"}}",
      "payloadType":"json",
      "repeat":"",
      "crontab":"",
      "once":false,
      "onceDelay":"1",
      "x":90,
      "y":380,
      "wires":[
         [
            "b330709c.326dd"
         ]
      ]
   },
   {
      "id":"1721090f.a20157",
      "type":"split",
      "z":"2bdc8678.a14262",
      "name":"",
      "splt":"\\n",
      "spltType":"str",
      "arraySplt":1,
      "arraySpltType":"len",
      "stream":false,
      "addname":"",
      "x":450,
      "y":200,
      "wires":[
         [
            "8c8d3631.38c7f"
         ]
      ]
   },
   {
      "id":"1ff9e569.05d16b",
      "type":"status",
      "z":"2bdc8678.a14262",
      "name":"server status",
      "scope":[
         "d82b0a8a.c7f97"
      ],
      "x":590,
      "y":440,
      "wires":[
         [
            "7f4e265f.b3f8d"
         ]
      ]
   },
   {
      "id":"dad01ff4.424398",
      "type":"change",
      "z":"2bdc8678.a14262",
      "name":"unstack message",
      "rules":[
         {
            "t":"set",
            "p":"trigger",
            "pt":"msg",
            "to":"1",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":890,
      "y":380,
      "wires":[
         [
            "ab765998.d207"
         ]
      ]
   },
   {
      "id":"1bf6a3a1.cc150c",
      "type":"delay",
      "z":"2bdc8678.a14262",
      "name":"",
      "pauseType":"delay",
      "timeout":"1",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"1",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":false,
      "x":940,
      "y":560,
      "wires":[
         [
            "83b12071.29c43"
         ]
      ]
   },
   {
      "id":"3ac288c4.67e3a8",
      "type":"inject",
      "z":"2bdc8678.a14262",
      "name":"reset",
      "topic":"",
      "payload":"true",
      "payloadType":"bool",
      "repeat":"",
      "crontab":"",
      "once":true,
      "onceDelay":"2",
      "x":90,
      "y":320,
      "wires":[
         [
            "cd48442f.389a28"
         ]
      ]
   },
   {
      "id":"cf3f9c63.60b558",
      "type":"change",
      "z":"2bdc8678.a14262",
      "name":"reset queue",
      "rules":[
         {
            "t":"set",
            "p":"reset",
            "pt":"msg",
            "to":"true",
            "tot":"bool"
         },
         {
            "t":"set",
            "p":"bypass",
            "pt":"msg",
            "to":"false",
            "tot":"bool"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":870,
      "y":320,
      "wires":[
         [
            "ab765998.d207"
         ]
      ]
   },
   {
      "id":"750eff5f.0362e",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"check vmc connection status",
      "func":"vmcConnectionStatus = flow.get(\"vmcConnectionStatus\");\nmsg.topic = \"vmc/connectionStatus\"\n\nif (vmcConnectionStatus == \"connected\") {\n    msg.payload = \"connected\";\n} else {\n    msg.payload = \"disconnected\"\n}\nreturn msg;\n",
      "outputs":1,
      "noerr":0,
      "x":340,
      "y":260,
      "wires":[
         [
            "9bef5267.88717"
         ]
      ]
   },
   {
      "id":"56320323.811ac4",
      "type":"debug",
      "z":"2bdc8678.a14262",
      "name":"mqtt payload",
      "active":true,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"payload",
      "targetType":"msg",
      "x":910,
      "y":460,
      "wires":[

      ]
   },
   {
      "id":"93000aa1.05ad78",
      "type":"status",
      "z":"2bdc8678.a14262",
      "name":"write function status",
      "scope":[
         "b0788add.6def58"
      ],
      "x":130,
      "y":80,
      "wires":[
         [
            "cd14e275.c5ab"
         ]
      ]
   },
   {
      "id":"cd14e275.c5ab",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"check vmc connection",
      "func":"var status = msg.status.text;\nvar reset = true;\n\nif (status == \"active\" || status == \"writing done\") {\n    msg.payload = \"connected\";\n    msg.reset = reset;\n    flow.set(\"vmcConnectionStatus\", \"connected\")\n} else {\n    msg.payload = \"disconnected\";\n}\nreturn msg;\n",
      "outputs":1,
      "noerr":0,
      "x":360,
      "y":80,
      "wires":[
         [
            "2ba49b84.a3aae4"
         ]
      ]
   },
   {
      "id":"88d0eba2.7c3b78",
      "type":"status",
      "z":"2bdc8678.a14262",
      "name":"read function status",
      "scope":[
         "1bc292a9.c9c2fd"
      ],
      "x":130,
      "y":140,
      "wires":[
         [
            "c47191ed.ac72a"
         ]
      ]
   },
   {
      "id":"81da7249.05fcd",
      "type":"delay",
      "z":"2bdc8678.a14262",
      "name":"",
      "pauseType":"delay",
      "timeout":"5",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"1",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":false,
      "x":700,
      "y":80,
      "wires":[
         [
            "69bddabf.491ad4"
         ]
      ]
   },
   {
      "id":"2ba49b84.a3aae4",
      "type":"rbe",
      "z":"2bdc8678.a14262",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":550,
      "y":80,
      "wires":[
         [
            "81da7249.05fcd"
         ]
      ]
   },
   {
      "id":"c47191ed.ac72a",
      "type":"function",
      "z":"2bdc8678.a14262",
      "name":"check vmc connection",
      "func":"var status = msg.status.text;\nvar reset = true;\n\nif (status == \"active\" || status == \"reading done\") {\n    msg.payload = \"connected\";\n    msg.reset = reset;\n    flow.set(\"vmcConnectionStatus\", \"connected\")\n} else {\n    msg.payload = \"disconnected\";\n}\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":360,
      "y":140,
      "wires":[
         [
            "601a4f03.e13198"
         ]
      ]
   },
   {
      "id":"601a4f03.e13198",
      "type":"rbe",
      "z":"2bdc8678.a14262",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":550,
      "y":140,
      "wires":[
         [
            "a432a11a.c2b6a8"
         ]
      ]
   },
   {
      "id":"a432a11a.c2b6a8",
      "type":"delay",
      "z":"2bdc8678.a14262",
      "name":"",
      "pauseType":"delay",
      "timeout":"5",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"1",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":false,
      "x":700,
      "y":140,
      "wires":[
         [
            "69bddabf.491ad4"
         ]
      ]
   },
   {
      "id":"c414539e.412278",
      "type":"inject",
      "z":"2bdc8678.a14262",
      "name":"",
      "topic":"",
      "payload":"",
      "payloadType":"date",
      "repeat":"5",
      "crontab":"",
      "once":false,
      "onceDelay":0.1,
      "x":110,
      "y":260,
      "wires":[
         [
            "750eff5f.0362e"
         ]
      ]
   },
   {
      "id":"9bef5267.88717",
      "type":"rbe",
      "z":"2bdc8678.a14262",
      "name":"vmc connection status change",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":630,
      "y":260,
      "wires":[
         [
            "7f4e265f.b3f8d",
            "c8511e49.e23288",
            "cf3f9c63.60b558"
         ]
      ]
   },
   {
      "id":"c8511e49.e23288",
      "type":"debug",
      "z":"2bdc8678.a14262",
      "name":"vmc connection status",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"payload",
      "targetType":"msg",
      "x":900,
      "y":260,
      "wires":[

      ]
   },
   {
      "id":"69bddabf.491ad4",
      "type":"change",
      "z":"2bdc8678.a14262",
      "name":"vmc connection status",
      "rules":[
         {
            "t":"set",
            "p":"vmcConnectionStatus",
            "pt":"flow",
            "to":"disconnected",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":900,
      "y":80,
      "wires":[
         [

         ]
      ]
   },
   {
      "id":"cd48442f.389a28",
      "type":"change",
      "z":"2bdc8678.a14262",
      "name":"vmc connection status",
      "rules":[
         {
            "t":"set",
            "p":"vmcConnectionStatus",
            "pt":"flow",
            "to":"connected",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":320,
      "y":320,
      "wires":[
         [
            "cf3f9c63.60b558"
         ]
      ]
   },
   {
      "id":"733a156.b55aaec",
      "type":"change",
      "z":"2bdc8678.a14262",
      "name":"message timeout",
      "rules":[
         {
            "t":"set",
            "p":"ttl",
            "pt":"msg",
            "to":"60000",
            "tot":"num"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":1290,
      "y":200,
      "wires":[
         [
            "ab765998.d207"
         ]
      ]
   },
   {
      "id":"ab765998.d207",
      "type":"simple-queue",
      "z":"2bdc8678.a14262",
      "name":"message queue",
      "firstMessageBypass":true,
      "bypassInterval":"10000",
      "x":1100,
      "y":320,
      "wires":[
         [
            "822fa2e5.f5ad98",
            "b0788add.6def58"
         ]
      ]
   },
   {
      "id":"7f4e265f.b3f8d",
      "type":"queue",
      "z":"2bdc8678.a14262",
      "name":"",
      "connected":"^connected",
      "connectedType":"re",
      "disconnected":"",
      "disconnectedType":"re",
      "sqlite":"/tmp/queue.sqlite",
      "x":750,
      "y":500,
      "wires":[
         [
            "d82b0a8a.c7f97",
            "56320323.811ac4"
         ]
      ]
   },
   {
      "id":"822fa2e5.f5ad98",
      "type":"debug",
      "z":"2bdc8678.a14262",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"false",
      "x":1320,
      "y":320,
      "wires":[

      ]
   },
   {
      "id":"84089ad8.f112d",
      "type":"modbus-client",
      "z":"",
      "name":"VMC",
      "clienttype":"tcp",
      "bufferCommands":false,
      "stateLogEnabled":false,
      "tcpHost":"127.0.0.1",
      "tcpPort":"10502",
      "tcpType":"DEFAULT",
      "serialPort":"/dev/ttyUSB",
      "serialType":"RTU-BUFFERD",
      "serialBaudrate":"9600",
      "serialDatabits":"8",
      "serialStopbits":"1",
      "serialParity":"none",
      "serialConnectionDelay":"100",
      "unit_id":180,
      "commandDelay":1,
      "clientTimeout":1000,
      "reconnectTimeout":2000
   },
   {
      "id":"eca996cf.aecc38",
      "type":"mqtt-broker",
      "z":"",
      "name":"",
      "broker":"localhost",
      "port":"1883",
      "clientid":"",
      "usetls":false,
      "compatmode":true,
      "keepalive":"0",
      "cleansession":true,
      "birthTopic":"",
      "birthQos":"0",
      "birthPayload":"",
      "closeTopic":"",
      "closeQos":"0",
      "closePayload":"",
      "willTopic":"",
      "willQos":"0",
      "willPayload":""
   }
]
